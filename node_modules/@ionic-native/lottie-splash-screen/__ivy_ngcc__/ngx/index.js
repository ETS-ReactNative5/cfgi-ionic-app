import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
var LottieSplashScreen = /** @class */ (function (_super) {
    __extends(LottieSplashScreen, _super);
    function LottieSplashScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LottieSplashScreen.prototype.show = function (location, remote, width, height) { return cordova(this, "show", { "sync": true }, arguments); };
    LottieSplashScreen.prototype.hide = function () { return cordova(this, "hide", { "sync": true }, arguments); };
    LottieSplashScreen.pluginName = "LottieSplashScreen";
    LottieSplashScreen.plugin = "cordova-plugin-lottie-splashscreen";
    LottieSplashScreen.pluginRef = "lottie.splashscreen";
    LottieSplashScreen.repo = "https://github.com/timbru31/cordova-plugin-lottie-splashscreen";
    LottieSplashScreen.install = "";
    LottieSplashScreen.installVariables = [];
    LottieSplashScreen.platforms = ["Android", "iOS"];
LottieSplashScreen.ɵfac = /*@__PURE__*/ function () { var ɵLottieSplashScreen_BaseFactory; return function LottieSplashScreen_Factory(t) { return (ɵLottieSplashScreen_BaseFactory || (ɵLottieSplashScreen_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(LottieSplashScreen)))(t || LottieSplashScreen); }; }();
LottieSplashScreen.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LottieSplashScreen, factory: function (t) { return LottieSplashScreen.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LottieSplashScreen, [{
        type: Injectable
    }], null, null); })();
    return LottieSplashScreen;
}(IonicNativePlugin));
export { LottieSplashScreen };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvbG90dGllLXNwbGFzaC1zY3JlZW4vbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0FBQ3hFO0FBSVMsSUE0QitCLHNDQUFpQjtBQUFDO0FBRTlCO0FBQXlFO0FBQU0sSUFTekcsaUNBQUksYUFBQyxRQUFpQixFQUFFLE1BQWdCLEVBQUUsS0FBYyxFQUFFLE1BQWU7QUFHM0IsSUFHOUMsaUNBQUk7QUFFMkQ7QUFBMEQ7QUFBc0U7QUFBMEQ7QUFBZ0c7QUFBcUM7QUFBOEM7c0RBcEI3YSxVQUFVOzs7OzBCQUNMO0FBQUMsNkJBbENQO0FBQUUsRUFrQ3NDLGlCQUFpQjtBQUN4RCxTQURZLGtCQUFrQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTG90dGllIFNwbGFzaCBTY3JlZW5cbiAqIEBkZXNjcmlwdGlvblxuICogQ29yZG92YSBwbHVnaW4gdG8gc2hvdyBib2R5bW92aW4vTG90dGllIGFuaW1hdGlvbnMgYXMgdGhlIHNwbGFzaCBzY3JlZW4gd2l0aCBBaXJibmIncyBMb3R0aWUgd3JhcHBlclxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTG90dGllU3BsYXNoU2NyZWVuIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9sb3R0aWUtc3BsYXNoLXNjcmVlbi9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvdHRpZVNwbGFzaFNjcmVlbjogTG90dGllU3BsYXNoU2NyZWVuKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5sb3R0aWVTcGxhc2hTY3JlZW4uc2hvdygnd3d3L2xvdHRpZS9hbmltYXRpb24uanNvbicsIGZhbHNlLCAxMDI0LCA3NjgpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTG90dGllU3BsYXNoU2NyZWVuJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tbG90dGllLXNwbGFzaHNjcmVlbicsXG4gIHBsdWdpblJlZjogJ2xvdHRpZS5zcGxhc2hzY3JlZW4nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3RpbWJydTMxL2NvcmRvdmEtcGx1Z2luLWxvdHRpZS1zcGxhc2hzY3JlZW4nLFxuICBpbnN0YWxsOiAnJyxcbiAgaW5zdGFsbFZhcmlhYmxlczogW10sXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMb3R0aWVTcGxhc2hTY3JlZW4gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHNob3dzIGEgTG90dGllIHNwbGFzaCBzY3JlZW4uIElmIG5vIGFyZ3VtZW50cyBhcmUgZ2l2ZW4sIGl0IGRlZmF1bHRzIHRvIHRoZSBjb25maWcueG1sIHZhbHVlcywgaG93ZXZlciB5b3UgY2FuIHBhc3MgKG5ldykgb3B0aW9ucyBoZXJlIHRvIGNoYW5nZSB0aGUgYmVoYXZpb3Igb24gcnVudGltZS4gKEZvciBlYXNpZXIgcmVhZGluZyB0aGUgVHlwZVNjcmlwdCBub3RhdGlvbiBpcyB1c2VkKVxuICAgKiBAcGFyYW0gbG9jYXRpb24ge3N0cmluZ30gTG9jYXRpb24gb2YgdGhlIExvdHRpZSBKU09OIGZpbGUgdGhhdCBzaG91bGQgYmUgbG9hZGVkLlxuICAgKiBAcGFyYW0gcmVtb3RlIHtudW1iZXJ9IFRvZ2dsZXMgTG90dGllJ3MgcmVtb3RlIG1vZGUgd2hpY2ggYWxsb3dzIGZpbGVzIHRvIGJlIGRvd25sb2FkZWQvZGlzcGxheWVkIGZyb20gVVJMcy4gRXhhbXBsZTpcbiAgICogQHBhcmFtIHdpZHRoIHtudW1iZXJ9IFdpZHRoIG9mIHRoZSBjb250YWluZXIgdGhhdCdzIHJlbmRlcmluZyB0aGUgTG90dGllIGFuaW1hdGlvblxuICAgKiBAcGFyYW0gaGVpZ2h0IHtudW1iZXJ9IEhlaWdodCBvZiB0aGUgY29udGFpbmVyIHRoYXQncyByZW5kZXJpbmcgdGhlIExvdHRpZSBhbmltYXRpb25cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBzaG93KGxvY2F0aW9uPzogc3RyaW5nLCByZW1vdGU/OiBib29sZWFuLCB3aWR0aD86IG51bWJlciwgaGVpZ2h0PzogbnVtYmVyKTogdm9pZCB7fVxuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZHMgaGlkZXMgdGhlIGN1cnJlbnQgYWN0aXZlIExvdHRpZSBzcGxhc2hzY3JlZW4gYW5kIGRlc3Ryb3lzIHRoZSB2aWV3cy5cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBoaWRlKCk6IHZvaWQge31cbn1cbiJdfQ==